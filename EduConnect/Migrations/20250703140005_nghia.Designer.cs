// <auto-generated />
using System;
using EduConnect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduConnect.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250703140005_nghia")]
    partial class nghia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduConnect.Entities.Attendance", b =>
                {
                    b.Property<string>("AtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("courseID");

                    b.Property<string>("Focus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("focus");

                    b.Property<string>("Homework")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("homework");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("Participation")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("participation");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("studentID");

                    b.HasKey("AtID");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.ChatBotLog", b =>
                {
                    b.Property<string>("ChatId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("chatID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("messageID");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("parentID");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("ChatId")
                        .HasName("PK__ChatBotL__19BDBDB3C0C4419E");

                    b.HasIndex("MessageId");

                    b.HasIndex("ParentId");

                    b.ToTable("ChatBotLog", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Classroom", b =>
                {
                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("classID");

                    b.Property<string>("ClassName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("className");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("teacherID");

                    b.HasKey("ClassId");

                    b.HasIndex("TeacherId")
                        .IsUnique()
                        .HasFilter("[teacherID] IS NOT NULL");

                    b.ToTable("Classroom", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("courseID");

                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("classID");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dayOfWeek");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("endTime");

                    b.Property<string>("SemeId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("semeID");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("startTime");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subjectName");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("teacherID");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__2AA84FF184342A62");

                    b.HasIndex("ClassId");

                    b.HasIndex("SemeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Message", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("messageID");

                    b.Property<DateOnly?>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("createdAt");

                    b.Property<string>("MessageText")
                        .HasColumnType("text")
                        .HasColumnName("messageText");

                    b.Property<string>("ResponseText")
                        .HasColumnType("text")
                        .HasColumnName("responseText");

                    b.HasKey("MessageId")
                        .HasName("PK__Message__4808B873C2F34A8E");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Parent", b =>
                {
                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("parentID");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("userID");

                    b.HasKey("ParentId")
                        .HasName("PK__Parent__90658CB8D9406FDE");

                    b.HasIndex("UserId");

                    b.ToTable("Parent", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Report", b =>
                {
                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ReportId");

                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("classID");

                    b.Property<string>("ClassName")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("className");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("teacherID");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("teacherName");

                    b.Property<string>("TermId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("termID");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("ReportId")
                        .HasName("PK__Report__04C97FDB86006B0D");

                    b.HasIndex("ClassId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.SchoolYear", b =>
                {
                    b.Property<string>("SchoolYearID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("schoolYearID");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.HasKey("SchoolYearID")
                        .HasName("PK_SchoolYear");

                    b.ToTable("SchoolYear", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Score", b =>
                {
                    b.Property<string>("ScoreId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("scoreID");

                    b.Property<decimal?>("Score1")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("score");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("studentID");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("subjectID");

                    b.HasKey("ScoreId")
                        .HasName("PK__Score__B56A0D6D900EDC0A");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Score", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Semester", b =>
                {
                    b.Property<string>("SemeId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("semeID");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<string>("SchoolYearID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("schoolYearID");

                    b.Property<string>("SemesterName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("semesterName");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("SemeId")
                        .HasName("PK_Semester");

                    b.HasIndex("SchoolYearID");

                    b.ToTable("Semester", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("studentID");

                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("classID");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("parentID");

                    b.HasKey("StudentId")
                        .HasName("PK__Student__4D11D65C2495EB66");

                    b.HasIndex("ClassId");

                    b.HasIndex("ParentId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Subject", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("subjectID");

                    b.Property<string>("SemeId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("semeID");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subjectName");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subject__ACF9A740AF98EE05");

                    b.HasIndex("SemeId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Teacher", b =>
                {
                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("teacherID");

                    b.Property<string>("FcmToken")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("fcm_token");

                    b.Property<string>("Platform")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("platform");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("subjectID");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("userID");

                    b.HasKey("TeacherId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.Term", b =>
                {
                    b.Property<string>("TermID")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("termID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mode");

                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ReportId");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TermID")
                        .HasName("PK_Term");

                    b.HasIndex("ReportId")
                        .IsUnique()
                        .HasFilter("[ReportId] IS NOT NULL");

                    b.ToTable("Term", (string)null);
                });

            modelBuilder.Entity("EduConnect.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("userID");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createAt");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("passwordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CDFEE67CF80");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduConnect.Entities.Attendance", b =>
                {
                    b.HasOne("EduConnect.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__cours__5535A963");

                    b.HasOne("EduConnect.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__stude__5441852A");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduConnect.Entities.ChatBotLog", b =>
                {
                    b.HasOne("EduConnect.Entities.Message", "Message")
                        .WithMany("ChatBotLogs")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK__ChatBotLo__messa__6383C8BA");

                    b.HasOne("EduConnect.Entities.Parent", "Parent")
                        .WithMany("ChatBotLogs")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__ChatBotLo__paren__656C112C");

                    b.Navigation("Message");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EduConnect.Entities.Classroom", b =>
                {
                    b.HasOne("EduConnect.Entities.Teacher", "Teacher")
                        .WithOne("Classroom")
                        .HasForeignKey("EduConnect.Entities.Classroom", "TeacherId")
                        .HasConstraintName("FK_Classroom_Teacher");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EduConnect.Entities.Course", b =>
                {
                    b.HasOne("EduConnect.Entities.Classroom", "Class")
                        .WithMany("Courses")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Course__classID__4F7CD00D");

                    b.HasOne("EduConnect.Entities.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemeId")
                        .HasConstraintName("FK__Course__termID__5165187F");

                    b.HasOne("EduConnect.Entities.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Course__teacherI__5070F446");

                    b.Navigation("Class");

                    b.Navigation("Semester");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EduConnect.Entities.Parent", b =>
                {
                    b.HasOne("EduConnect.Entities.User", "User")
                        .WithMany("Parents")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Parent__userID__3E52440B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduConnect.Entities.Report", b =>
                {
                    b.HasOne("EduConnect.Entities.Classroom", "Class")
                        .WithMany("Reports")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Report__class__59063A47");

                    b.HasOne("EduConnect.Entities.Teacher", "Teacher")
                        .WithMany("Reports")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Report__teach__5812160E");

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EduConnect.Entities.Score", b =>
                {
                    b.HasOne("EduConnect.Entities.Student", "Student")
                        .WithMany("Scores")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Score_Student");

                    b.HasOne("EduConnect.Entities.Subject", "Subject")
                        .WithMany("Scores")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Score__subjectID__4CA06362");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduConnect.Entities.Semester", b =>
                {
                    b.HasOne("EduConnect.Entities.SchoolYear", "SchoolYear")
                        .WithMany("Semesters")
                        .HasForeignKey("SchoolYearID")
                        .HasConstraintName("FK_Semester_SchoolYear");

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("EduConnect.Entities.Student", b =>
                {
                    b.HasOne("EduConnect.Entities.Classroom", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Student_Classroom");

                    b.HasOne("EduConnect.Entities.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Student__parentI__412EB0B6");

                    b.Navigation("Class");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EduConnect.Entities.Subject", b =>
                {
                    b.HasOne("EduConnect.Entities.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemeId")
                        .HasConstraintName("FK__Subject__termID__3B75D760");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduConnect.Entities.Teacher", b =>
                {
                    b.HasOne("EduConnect.Entities.Subject", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Teacher_Subject");

                    b.HasOne("EduConnect.Entities.User", "User")
                        .WithMany("Teachers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Teacher_User");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduConnect.Entities.Term", b =>
                {
                    b.HasOne("EduConnect.Entities.Report", "Report")
                        .WithOne("Term")
                        .HasForeignKey("EduConnect.Entities.Term", "ReportId")
                        .HasConstraintName("FK_Term_Report");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("EduConnect.Entities.Classroom", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Reports");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EduConnect.Entities.Message", b =>
                {
                    b.Navigation("ChatBotLogs");
                });

            modelBuilder.Entity("EduConnect.Entities.Parent", b =>
                {
                    b.Navigation("ChatBotLogs");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EduConnect.Entities.Report", b =>
                {
                    b.Navigation("Term");
                });

            modelBuilder.Entity("EduConnect.Entities.SchoolYear", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("EduConnect.Entities.Semester", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("EduConnect.Entities.Student", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("EduConnect.Entities.Subject", b =>
                {
                    b.Navigation("Scores");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("EduConnect.Entities.Teacher", b =>
                {
                    b.Navigation("Classroom");

                    b.Navigation("Courses");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("EduConnect.Entities.User", b =>
                {
                    b.Navigation("Parents");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
